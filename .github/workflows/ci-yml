name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t ci-cd-demo:latest .

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Remove old container if exists
        run: |
          if [ "$(docker ps -aq -f name=ci-cd-demo-container)" ]; then
            docker rm -f ci-cd-demo-container
          fi

      - name: Run new container
        run: |
          docker run -d -p 8082:8082 --name ci-cd-demo-container ci-cd-demo:latest

  test:
    name: ✅ Test
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Wait for container startup
        run: sleep 5

      - name: Verify container is running
        run: docker ps | grep ci-cd-demo-container

      - name: Health check on application
        run: curl --fail http://localhost:8082

      - name: Show container logs on failure
        if: failure()
        run: docker logs ci-cd-demo-container
